
// 방배정
//주어진 명수의 사람을 4개의 방에 배정하려고 한다.
//주어진 2차 행렬에 i번째 사람과 j번째 사람이 아는 사이일 경우 1을 모르는 사이일 경우 0의 값으로 표시하고 있다.
//아는 사람끼리 같은 방에 배정되지 않도록 할 경우 총 경우의 수는 어떻게 되는가 ? 이 경우 중 가장 적은 방을
//이용하여 배정한다면 최소 몇 개의 방이 필요한가?
//
//입력 값
//9
//0 0 0 0 0 0 1 1 1
//0 0 0 1 0 0 0 1 1
//0 0 0 0 0 0 0 0 1
//0 1 0 0 1 1 0 0 0
//0 0 0 1 0 0 0 0 0
//0 0 0 1 0 0 0 0 0
//1 0 0 0 0 0 0 0 0
//1 1 0 0 0 0 0 0 0
//1 1 1 0 0 0 0 0 0
//출력값
//20412 2

#include <iostream>
using namespace std;

int N;
int person_RNum[10];
int relation[10][10];
int needed_room = 0x12345678;
int call_cnt, flag;

bool check(int room_num, int kth_person)
{
	for (int i = 1; i < kth_person; i++)
		if (person_RNum[i] == room_num)
		{
			flag = 0;
			if (relation[kth_person][i]) return true;
		}

	return false;
}

void solve(int kth_person, int room_cnt)
{
	call_cnt++;
	if (kth_person == 9)
	{
		if (room_cnt < needed_room) needed_room = room_cnt;

		if (room_cnt == 2)
		{
			for (int i = 1; i <= 9; i++)
				cout << person_RNum[i];
			cout << endl;
		}
	}
	else
	{
		kth_person++;
		for (int i = 1; i <= 4; i++)
		{
			flag = 1;
			if (check(i, kth_person)) continue;

			if (room_cnt + flag >= needed_room) continue;

			person_RNum[kth_person] = i;
			solve(kth_person, room_cnt + flag);
		}
	}
}


void main()
{
	cin >> N;

	for (int i = 1; i <= N; i++)
		for (int j = 1; j <= N; j++)
			cin >> relation[i][j];

	solve(0, 0);

	cout << needed_room << " " << call_cnt << endl;
}


